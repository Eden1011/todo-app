# ==============================================
# KUBERNETES MANIFESTS - TODO APP
# ==============================================

# ==============================================
# SECRETS - Secure management of sensitive data
# ==============================================

apiVersion: v1
kind: Secret
metadata:
    name: todo-app-secrets
    namespace: default
type: Opaque
data:
    # Base64 encoded values
    mysql-root-password: cm9vdHBhc3N3b3Jk # rootpassword
    mysql-password: cGFzc3dvcmQ= # password
    mongodb-password: cGFzc3dvcmQ= # password
    access-token-secret: NzVhMDliODEyZDE2YzVjOWJkYWRmY2U4ZmI2ZGFhMDMyYTBmZmI0MDQ2ODU3YzhjNTA1ZmQ3ZjczOTYzMGFjNGJiN2Y3OTc0OWQ1MmU5ZGUxZTQzNDY1OTI1ZDgxMjQ5OGRjY2JmY2U5MjUyYWExMmRiMjEwM2ZlNGU3YzFhZg==
    refresh-token-secret: NzNkMjZmNmYxMDBiYThmZDExM2RiNGQxYjE3ZWQ0ODRiNTNmOGJmODUyZDA1ODc5ODk0YjM3ZjY2ZjBjN2FiYmQ0ZjliNTNkNWUxNjI0MzgyOTliOTk3NDYwZmRkM2Y5MzJjMTFjOTgxYmE0YmI4NGExYmU0YWQ3MDQ4OTYyYg==
    smtp-password: aGRvaiBzcm15IGl2Y3Igd292cg== # hdoj srmy ivcr wovr
    google-client-secret: R09DU1BYLXNYRU1fSndEQzVHenlSMWlzcG1TQWpKWXlEdA== # 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

---
# ==============================================
# CONFIGMAPS - Non-sensitive configuration
# ==============================================

apiVersion: v1
kind: ConfigMap
metadata:
    name: todo-app-config
    namespace: default
data:
    app-name: "Todo App"
    app-url: "http://localhost:3000"
    smtp-host: "smtp.gmail.com"
    smtp-port: "587"
    smtp-user: "glovkakrzys252@gmail.com"
    from-email: "glovkakrzys252@gmail.com"
    google-client-id: "672707256810-dg697akric7qush3aafdsfg01nlat90i.apps.googleusercontent.com"
    cors-origin: "http://localhost:3001"
    node-env: "production"

---
apiVersion: v1
kind: ConfigMap
metadata:
    name: mariadb-init-config
    namespace: default
data:
    init-db.sql: |
        CREATE DATABASE IF NOT EXISTS `auth_service` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
        CREATE DATABASE IF NOT EXISTS `db_service` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
        GRANT ALL PRIVILEGES ON `auth_service`.* TO 'todoapp'@'%';
        GRANT ALL PRIVILEGES ON `db_service`.* TO 'todoapp'@'%';
        FLUSH PRIVILEGES;

---
# ==============================================
# PERSISTENT VOLUMES & CLAIMS
# ==============================================

apiVersion: v1
kind: PersistentVolume
metadata:
    name: mariadb-pv
spec:
    capacity:
        storage: 2Gi
    accessModes:
        - ReadWriteOnce
    persistentVolumeReclaimPolicy: Retain
    storageClassName: manual
    hostPath:
        path: /data/mariadb

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: mariadb-data
    namespace: default
spec:
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 1Gi
    storageClassName: manual

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: mongodb-pv
spec:
    capacity:
        storage: 2Gi
    accessModes:
        - ReadWriteOnce
    persistentVolumeReclaimPolicy: Retain
    storageClassName: manual
    hostPath:
        path: /data/mongodb

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: mongodb-data
    namespace: default
spec:
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 1Gi
    storageClassName: manual

---
# ==============================================
# DATABASE DEPLOYMENTS
# ==============================================

apiVersion: apps/v1
kind: Deployment
metadata:
    name: mariadb
    namespace: default
    labels:
        app: mariadb
        tier: database
spec:
    replicas: 1
    strategy:
        type: Recreate
    selector:
        matchLabels:
            app: mariadb
    template:
        metadata:
            labels:
                app: mariadb
                tier: database
        spec:
            containers:
                - name: mariadb
                  image: mariadb:10.11
                  env:
                      - name: MYSQL_ROOT_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: mysql-root-password
                      - name: MYSQL_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: mysql-password
                      - name: MYSQL_USER
                        value: "todoapp"
                      - name: MYSQL_DATABASE
                        value: "todo_main"
                  ports:
                      - containerPort: 3306
                        name: mysql
                  volumeMounts:
                      - name: mariadb-storage
                        mountPath: /var/lib/mysql
                      - name: mariadb-init
                        mountPath: /docker-entrypoint-initdb.d/init-db.sql
                        subPath: init-db.sql
                  livenessProbe:
                      exec:
                          command:
                              - healthcheck.sh
                              - --connect
                              - --innodb_initialized
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      timeoutSeconds: 5
                      failureThreshold: 3
                  readinessProbe:
                      exec:
                          command:
                              - healthcheck.sh
                              - --connect
                              - --innodb_initialized
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      timeoutSeconds: 1
                  resources:
                      requests:
                          memory: "256Mi"
                          cpu: "250m"
                      limits:
                          memory: "512Mi"
                          cpu: "500m"
            volumes:
                - name: mariadb-storage
                  emptyDir: {}
                - name: mariadb-init
                  configMap:
                      name: mariadb-init-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: mongodb
    namespace: default
    labels:
        app: mongodb
        tier: database
spec:
    replicas: 1
    strategy:
        type: Recreate
    selector:
        matchLabels:
            app: mongodb
    template:
        metadata:
            labels:
                app: mongodb
                tier: database
        spec:
            containers:
                - name: mongodb
                  image: mongo:7
                  env:
                      - name: MONGO_INITDB_ROOT_USERNAME
                        value: "admin"
                      - name: MONGO_INITDB_ROOT_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: mongodb-password
                      - name: MONGO_INITDB_DATABASE
                        value: "chat_service"
                  ports:
                      - containerPort: 27017
                        name: mongodb
                  volumeMounts:
                      - name: mongodb-storage
                        mountPath: /data/db
                  livenessProbe:
                      exec:
                          command:
                              - mongosh
                              - --eval
                              - "db.adminCommand('ping')"
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      timeoutSeconds: 5
                      failureThreshold: 3
                  readinessProbe:
                      exec:
                          command:
                              - mongosh
                              - --eval
                              - "db.adminCommand('ping')"
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      timeoutSeconds: 1
                  resources:
                      requests:
                          memory: "256Mi"
                          cpu: "250m"
                      limits:
                          memory: "512Mi"
                          cpu: "500m"
            volumes:
                - name: mongodb-storage
                  emptyDir: {}

---
# ==============================================
# APPLICATION DEPLOYMENTS
# ==============================================

apiVersion: apps/v1
kind: Deployment
metadata:
    name: auth-service
    namespace: default
    labels:
        app: auth-service
        tier: backend
spec:
    replicas: 2
    selector:
        matchLabels:
            app: auth-service
    template:
        metadata:
            labels:
                app: auth-service
                tier: backend
        spec:
            initContainers:
                - name: wait-for-mariadb
                  image: busybox:1.35
                  command:
                      [
                          "sh",
                          "-c",
                          'until nc -z mariadb 3306; do echo "Waiting for MariaDB..."; sleep 2; done;',
                      ]
            containers:
                - name: auth-service
                  image: auth-service:latest
                  imagePullPolicy: Never
                  env:
                      - name: NODE_ENV
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: node-env
                      - name: PORT
                        value: "3000"
                      - name: DATABASE_URL
                        value: "mysql://todoapp:password@mariadb:3306/auth_service"
                      - name: ACCESS_TOKEN_SECRET
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: access-token-secret
                      - name: REFRESH_TOKEN_SECRET
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: refresh-token-secret
                      - name: SMTP_PASS
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: smtp-password
                      - name: GOOGLE_CLIENT_SECRET
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: google-client-secret
                      - name: CORS_ORIGIN
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: cors-origin
                      - name: APP_NAME
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: app-name
                      - name: APP_URL
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: app-url
                      - name: SMTP_HOST
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: smtp-host
                      - name: SMTP_PORT
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: smtp-port
                      - name: SMTP_USER
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: smtp-user
                      - name: FROM_EMAIL
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: from-email
                      - name: GOOGLE_CLIENT_ID
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: google-client-id
                      - name: ACCESS_TOKEN_EXPIRATION
                        value: "15m"
                      - name: REFRESH_TOKEN_EXPIRATION
                        value: "7d"
                      - name: EMAIL_EXPIRATION
                        value: "1d"
                      - name: AUTO_LOGIN_AFTER_REGISTER
                        value: "true"
                      - name: LOCAL_AUTH_URI
                        value: "local"
                      - name: LOCAL_EMAIL_VERIFY_URI
                        value: "email"
                      - name: OAUTH_URI
                        value: "oauth"
                      - name: OAUTH_GOOGLE_URI
                        value: "google"
                      - name: OAUTH_GOOGLE_CALLBACK_URI
                        value: "callback"
                      - name: DISABLE_RATE_LIMIT
                        value: "true"
                  ports:
                      - containerPort: 3000
                        name: http
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: 3000
                      initialDelaySeconds: 30
                      periodSeconds: 30
                      timeoutSeconds: 10
                      failureThreshold: 3
                  readinessProbe:
                      httpGet:
                          path: /health
                          port: 3000
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      timeoutSeconds: 3
                  resources:
                      requests:
                          memory: "128Mi"
                          cpu: "100m"
                      limits:
                          memory: "256Mi"
                          cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: db-service
    namespace: default
    labels:
        app: db-service
        tier: backend
spec:
    replicas: 2
    selector:
        matchLabels:
            app: db-service
    template:
        metadata:
            labels:
                app: db-service
                tier: backend
        spec:
            containers:
                - name: db-service
                  image: db-service:latest
                  imagePullPolicy: Never
                  env:
                      - name: NODE_ENV
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: node-env
                      - name: PORT
                        value: "4000"
                      - name: DATABASE_URL
                        value: "mysql://todoapp:password@mariadb:3306/db_service"
                      - name: AUTH_SERVICE_URL
                        value: "http://auth-service:3000"
                      - name: CHAT_SERVICE_URL
                        value: "http://chat-service:5000"
                      - name: SMTP_PASS
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: smtp-password
                      - name: APP_NAME
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: app-name
                      - name: SMTP_HOST
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: smtp-host
                      - name: SMTP_PORT
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: smtp-port
                      - name: SMTP_USER
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: smtp-user
                      - name: FROM_EMAIL
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: from-email
                      - name: DISABLE_RATE_LIMIT
                        value: "true"
                  ports:
                      - containerPort: 4000
                        name: http
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: 4000
                      initialDelaySeconds: 30
                      periodSeconds: 30
                      timeoutSeconds: 10
                      failureThreshold: 3
                  readinessProbe:
                      httpGet:
                          path: /health
                          port: 4000
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      timeoutSeconds: 3
                  resources:
                      requests:
                          memory: "128Mi"
                          cpu: "100m"
                      limits:
                          memory: "256Mi"
                          cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: chat-service
    namespace: default
    labels:
        app: chat-service
        tier: backend
spec:
    replicas: 2
    selector:
        matchLabels:
            app: chat-service
    template:
        metadata:
            labels:
                app: chat-service
                tier: backend
        spec:
            containers:
                - name: chat-service
                  image: chat-service:latest
                  imagePullPolicy: Never
                  env:
                      - name: NODE_ENV
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: node-env
                      - name: PORT
                        value: "5000"
                      - name: MONGODB_URI
                        value: "mongodb://admin:password@mongodb:27017/chat_service?authSource=admin"
                      - name: AUTH_SERVICE_URL
                        value: "http://auth-service:3000"
                      - name: DB_SERVICE_URL
                        value: "http://db-service:4000"
                      - name: ACCESS_TOKEN_SECRET
                        valueFrom:
                            secretKeyRef:
                                name: todo-app-secrets
                                key: access-token-secret
                      - name: CORS_ORIGIN
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: cors-origin
                      - name: DISABLE_RATE_LIMIT
                        value: "true"
                  ports:
                      - containerPort: 5000
                        name: http
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: 5000
                      initialDelaySeconds: 30
                      periodSeconds: 30
                      timeoutSeconds: 10
                      failureThreshold: 3
                  readinessProbe:
                      httpGet:
                          path: /health
                          port: 5000
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      timeoutSeconds: 3
                  resources:
                      requests:
                          memory: "128Mi"
                          cpu: "100m"
                      limits:
                          memory: "256Mi"
                          cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: frontend-service
    namespace: default
    labels:
        app: frontend-service
        tier: frontend
spec:
    replicas: 3
    selector:
        matchLabels:
            app: frontend-service
    template:
        metadata:
            labels:
                app: frontend-service
                tier: frontend
        spec:
            containers:
                - name: frontend-service
                  image: frontend-service:latest
                  imagePullPolicy: Never
                  env:
                      - name: NODE_ENV
                        valueFrom:
                            configMapKeyRef:
                                name: todo-app-config
                                key: node-env
                      - name: PORT
                        value: "3001"
                  ports:
                      - containerPort: 3001
                        name: http
                  livenessProbe:
                      httpGet:
                          path: /
                          port: 3001
                      initialDelaySeconds: 30
                      periodSeconds: 30
                      timeoutSeconds: 10
                      failureThreshold: 3
                  readinessProbe:
                      httpGet:
                          path: /
                          port: 3001
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      timeoutSeconds: 3
                  resources:
                      requests:
                          memory: "64Mi"
                          cpu: "50m"
                      limits:
                          memory: "128Mi"
                          cpu: "100m"

---
# ==============================================
# SERVICES
# ==============================================

apiVersion: v1
kind: Service
metadata:
    name: mariadb
    namespace: default
    labels:
        app: mariadb
spec:
    type: ClusterIP
    ports:
        - port: 3306
          targetPort: 3306
          name: mysql
    selector:
        app: mariadb

---
apiVersion: v1
kind: Service
metadata:
    name: mongodb
    namespace: default
    labels:
        app: mongodb
spec:
    type: ClusterIP
    ports:
        - port: 27017
          targetPort: 27017
          name: mongodb
    selector:
        app: mongodb

---
apiVersion: v1
kind: Service
metadata:
    name: auth-service
    namespace: default
    labels:
        app: auth-service
spec:
    type: ClusterIP
    ports:
        - port: 3000
          targetPort: 3000
          name: http
    selector:
        app: auth-service

---
apiVersion: v1
kind: Service
metadata:
    name: db-service
    namespace: default
    labels:
        app: db-service
spec:
    type: ClusterIP
    ports:
        - port: 4000
          targetPort: 4000
          name: http
    selector:
        app: db-service

---
apiVersion: v1
kind: Service
metadata:
    name: chat-service
    namespace: default
    labels:
        app: chat-service
spec:
    type: ClusterIP
    ports:
        - port: 5000
          targetPort: 5000
          name: http
    selector:
        app: chat-service

---
apiVersion: v1
kind: Service
metadata:
    name: frontend-service
    namespace: default
    labels:
        app: frontend-service
spec:
    type: ClusterIP
    ports:
        - port: 3001
          targetPort: 3001
          name: http
    selector:
        app: frontend-service

---
# ==============================================
# INGRESS - External Traffic Access
# ==============================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: todo-app-ingress
    namespace: default
    annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
    ingressClassName: nginx
    rules:
        - host: todo-app.local
          http:
              paths:
                  - path: /()(.*)
                    pathType: ImplementationSpecific
                    backend:
                        service:
                            name: frontend-service
                            port:
                                number: 3001
                  - path: /api/auth(/|$)(.*)
                    pathType: ImplementationSpecific
                    backend:
                        service:
                            name: auth-service
                            port:
                                number: 3000
                  - path: /api/db(/|$)(.*)
                    pathType: ImplementationSpecific
                    backend:
                        service:
                            name: db-service
                            port:
                                number: 4000
                  - path: /api/chat(/|$)(.*)
                    pathType: ImplementationSpecific
                    backend:
                        service:
                            name: chat-service
                            port:
                                number: 5000

---
# Alternative LoadBalancer Service for external access
apiVersion: v1
kind: Service
metadata:
    name: frontend-loadbalancer
    namespace: default
    labels:
        app: frontend-service
spec:
    type: LoadBalancer
    ports:
        - port: 80
          targetPort: 3001
          name: http
    selector:
        app: frontend-service

---
# ==============================================
# HORIZONTAL POD AUTOSCALERS (HPA)
# ==============================================

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
    name: frontend-service-hpa
    namespace: default
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: frontend-service
    minReplicas: 2
    maxReplicas: 10
    metrics:
        - type: Resource
          resource:
              name: cpu
              target:
                  type: Utilization
                  averageUtilization: 70
        - type: Resource
          resource:
              name: memory
              target:
                  type: Utilization
                  averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
    name: auth-service-hpa
    namespace: default
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: auth-service
    minReplicas: 1
    maxReplicas: 5
    metrics:
        - type: Resource
          resource:
              name: cpu
              target:
                  type: Utilization
                  averageUtilization: 70
        - type: Resource
          resource:
              name: memory
              target:
                  type: Utilization
                  averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
    name: db-service-hpa
    namespace: default
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: db-service
    minReplicas: 1
    maxReplicas: 5
    metrics:
        - type: Resource
          resource:
              name: cpu
              target:
                  type: Utilization
                  averageUtilization: 70
        - type: Resource
          resource:
              name: memory
              target:
                  type: Utilization
                  averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
    name: chat-service-hpa
    namespace: default
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: chat-service
    minReplicas: 1
    maxReplicas: 5
    metrics:
        - type: Resource
          resource:
              name: cpu
              target:
                  type: Utilization
                  averageUtilization: 70
        - type: Resource
          resource:
              name: memory
              target:
                  type: Utilization
                  averageUtilization: 80
