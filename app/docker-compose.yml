services:
    # Auth Service
    auth-service:
        build:
            context: ./services/auth-service
            dockerfile: Dockerfile
        container_name: todo-auth-service
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=production
            - PORT=3000
            - DATABASE_URL=file:./db.sqlite3
            - ACCESS_TOKEN_SECRET=75a09b812d16c5c9bdadfce8fb6daa032a0ffb4046857c8c505fd7f739630ac4bb7f79749d52e9de1e43465925d812498dccbfce9252aa12db2103fe4e7c1af
            - REFRESH_TOKEN_SECRET=73d26f6f100ba8fd113db4d1b17ed484b53f8bf852d05879894b37f66f0c7abbd4f9b53d5e162438299b997460fdd3f932c11c981ba4bb84a1be4ad7048962b
            - REFRESH_TOKEN_EXPIRATION_DATE=1h
            - ACCESS_TOKEN_EXPIRATION=15m
            - SMTP_HOST=smtp.gmail.com
            - SMTP_PORT=587
            - SMTP_USER=glovkakrzys252@gmail.com
            - SMTP_PASS=hdoj srmy ivcr wovr
            - FROM_EMAIL=glovkakrzys252@gmail.com
            - APP_NAME=todo
            - APP_URL=http://localhost:3000
            - AUTO_LOGIN_AFTER_REGISTER=true
            - EMAIL_EXPIRATION=1d
            - GOOGLE_CLIENT_ID=672707256810-dg697akric7qush3aafdsfg01nlat90i.apps.googleusercontent.com
            - GOOGLE_CLIENT_SECRET=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
            - LOCAL_AUTH_URI=local
            - LOCAL_EMAIL_VERIFY_URI=email
            - OAUTH_URI=oauth
            - OAUTH_GOOGLE_URI=google
            - OAUTH_GOOGLE_CALLBACK_URI=callback
        volumes:
            - auth_data:/app/prisma
        networks:
            - todo-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
            interval: 30s
            timeout: 10s
            retries: 3

    # DB Service
    db-service:
        build:
            context: ./services/db-service
            dockerfile: Dockerfile
        container_name: todo-db-service
        ports:
            - "4000:4000"
        environment:
            - NODE_ENV=production
            - PORT=4000
            - DATABASE_URL=file:./db.sqlite3
            - AUTH_SERVICE_URL=http://auth-service:3000
            - CHAT_SERVICE_URL=http://chat-service:5000
            - SMTP_HOST=smtp.gmail.com
            - SMTP_PORT=587
            - SMTP_USER=glovkakrzys252@gmail.com
            - SMTP_PASS=hdoj srmy ivcr wovr
            - FROM_EMAIL=glovkakrzys252@gmail.com
            - APP_NAME=todo
            - DISABLE_RATE_LIMIT=false
        volumes:
            - db_data:/app/prisma
        networks:
            - todo-network
        depends_on:
            auth-service:
                condition: service_healthy
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
            interval: 30s
            timeout: 10s
            retries: 3

    # Chat Service
    chat-service:
        build:
            context: ./services/chat-service
            dockerfile: Dockerfile
        container_name: todo-chat-service
        ports:
            - "5000:5000"
        environment:
            - NODE_ENV=production
            - PORT=5000
            - MONGODB_URI=mongodb://mongo:27017/chat_service
            - AUTH_SERVICE_URL=http://auth-service:3000
            - DB_SERVICE_URL=http://db-service:4000
            - CORS_ORIGIN=http://localhost:3000
        networks:
            - todo-network
        depends_on:
            - mongo
            - auth-service
            - db-service
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
            interval: 30s
            timeout: 10s
            retries: 3

    # MongoDB for Chat Service
    mongo:
        image: mongo:7-jammy
        container_name: todo-mongo
        ports:
            - "27017:27017"
        environment:
            - MONGO_INITDB_DATABASE=chat_service
        volumes:
            - mongo_data:/data/db
            - mongo_config:/data/configdb
        networks:
            - todo-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
            interval: 30s
            timeout: 10s
            retries: 3

volumes:
    auth_data:
        driver: local
    db_data:
        driver: local
    mongo_data:
        driver: local
    mongo_config:
        driver: local

networks:
    todo-network:
        driver: bridge
